---
swagger: "2.0"
info:
  description: "Petstore Open Api 2.0\n"
  version: "1.0.0"
  title: "Petstore Open Api 2.0"
  termsOfService: "http://swagger.io/terms/"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
tags:
- name: "pet"
- name: "store"
- name: "order"
schemes:
- "http"
- "https"
paths:
  /pets:
    get:
      tags:
      - "pet"
      summary: "Get all pets"
      description: ""
      operationId: "pet"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Pet"

    post:
      tags:
      - "pet"
      summary: "Add a new pet to the store"
      description: ""
      operationId: "addPet"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "petName"
        description: "Name of the pet"
        required: true
        type: string
      - in: "formData"
        name: "petAge"
        description: "Age (years) of the pet"
        required: true
        type: number
      - in: "formData"
        name: "urlPetPicture1"
        description: "Url of the Pet´s picture"
        required: false
        type: string
      - in: "formData"
        name: "urlPetPicture2"
        description: "Url of the Pet´s picture"
        required: false
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Pet"

  /pets/{petId}:
    get:
      tags:
      - "pet"
      summary: "Finds a particular pet"
      description: ""
      operationId: "pet"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "petId"
        description: "Pet Id"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Pet"

    patch:
      tags:
      - "pet"
      summary: "Updates a pet"
      description: ""
      operationId: "updatePet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "petId"
        description: "Pet Id"
        required: true
        type: string
      - in: "body"
        name: "petUrls"
        description: "Urls of Pictures"
        required: true
        schema:
          type: object
          properties:
            urlPetPicture1:
              type: string
            urlPetPicture2:
              type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Pet"

    delete:
      tags:
      - "pet"
      summary: "Deletes a pet"
      description: ""
      operationId: "deletePet"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "petId"
        description: "Item id"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Pet"

  /store/inventory:
    get:
      tags:
      - "store"
      summary: "Get all the items in the inventory"
      description: ""
      operationId: "inventory"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Store"

    post:
      tags:
      - "store"
      summary: "Add a new item to the store"
      description: ""
      operationId: "addInventoryItem"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "itemName"
        description: "Name of the item"
        required: true
        type: string
      - in: "formData"
        name: "quantity"
        description: ""
        required: true
        type: string
      - in: "formData"
        name: "unit"
        description: "Unit type of the item"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Store"

  /store/inventory/{itemId}:
    get:
      tags:
      - "store"
      summary: "Get a particular item from the inventory"
      description: ""
      operationId: "inventory"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "itemId"
        description: "Item Id"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Store"

    patch:
      tags:
      - "store"
      summary: "Updates an item"
      description: ""
      operationId: "updateInventoryItem"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "itemId"
        description: "Item Id"
        required: true
        type: string
      - in: "body"
        name: "item"
        description: "Item Data"
        required: true
        schema:
          type: object
          properties:
            itemName:
              type: string
            quantity:
              type: number
            unit:
              type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Store"

    delete:
      tags:
      - "store"
      summary: "Deletes an inventory item"
      description: ""
      operationId: "deleteInventoryItem"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "itemId"
        description: "Item id"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Store"

  /orders:
    get:
      tags:
      - "order"
      summary: "Get all the orders"
      description: ""
      operationId: "order"
      produces:
      - "application/json"
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Order"

    post:
      tags:
      - "order"
      summary: "Add a new new order"
      description: ""
      operationId: "addOrder"
      consumes:
      - "multipart/form-data"
      produces:
      - "application/json"
      parameters:
      - in: "formData"
        name: "itemId"
        description: "id of the item"
        required: true
        type: string
      - in: "formData"
        name: "quantity"
        description: ""
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Order"

  /orders/{orderId}:
    get:
      tags:
      - "order"
      summary: "Get a particular order"
      description: ""
      operationId: "order"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "orderId"
        description: "Order Id"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Order"

    patch:
      tags:
      - "order"
      summary: "Updates an order"
      description: ""
      operationId: "updateOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "orderId"
        description: "Order id"
        required: true
        type: string
      - in: "body"
        name: "order"
        description: "Order to update"
        required: true
        schema:
          type: object
          properties:
            quantity:
              type: number
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Order"

    delete:
      tags:
      - "order"
      summary: "Delete an existing order"
      description: ""
      operationId: "deleteOrder"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "orderId"
        description: "Order Id"
        required: true
        type: string
      responses:
        200:
          description: "Successful operation"
        500:
          $ref: '#/responses/ServerError'
      x-swagger-router-controller: "Order"

responses:
  BadRequestError:
    description: "Bad Request Error"
  UnauthorizedError:
    description: "API key is missing or invalid"
    headers:
      Authorization:
        type: string 
  ForbiddenError:
    description: "Forbidden"
  ServerError:
    description: "Server Error"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
